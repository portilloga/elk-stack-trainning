version: '3.7'

services:

  # The 'setup' service runs a one-off script which initializes the
  # 'logstash_internal' and 'kibana_system' users inside Elasticsearch with the
  # values of the passwords defined in the '.env' file.
  
  # This task is only performed during the *initial* startup of the stack. On all
  # subsequent runs, the service simply returns immediately, without performing
  # any modification to existing users.
  setup:
    container_name: setup
    build:
      context: setup/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    init: true
    volumes:
      - /var/docker/data-processing-with-logstash-trainning/setup:/state
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD}
    networks:
      - elk

  elasticsearch:
    container_name: elasticsearch
    build:
      context: elasticsearch/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,z
      - /var/docker/data-processing-with-logstash-trainning/elasticsearch:/usr/share/elasticsearch/data:z
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      # Bootstrap password.
      # Used to initialize the keystore during the initial startup of
      # Elasticsearch. Ignored on subsequent runs.
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - elk

  logstash:
    container_name: logstash
    build:
      context: logstash/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./logstash/config/jvm.options:/usr/share/logstash/config/jvm.options:ro,Z
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
      - /var/docker/data-processing-with-logstash-trainning/logstash/logs:/usr/share/logstash/logs
      - /var/docker/data-processing-with-logstash-trainning/logstash/files:/tmp/logstash
      - /var/docker/data-processing-with-logstash-trainning/logstash/data:/usr/share/logstash/data
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "8080:8080"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD}
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    container_name: kibana
    build:
      context: kibana/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - "5601:5601"
    environment:
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD}
    networks:
      - elk
    depends_on:
      - elasticsearch

  filebeat:
    container_name: filebeat
    build:
      context: filebeat/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
       - ./filebeat/config/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro,Z
       - ./filebeat/config/modules.d/apache.yml:/usr/share/filebeat/modules.d/apache.yml:ro,Z
    #   - ./logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
    #   - /var/docker/data-processing-with-logstash-trainning/logstash/logs:/usr/share/logstash/logs
       - /var/docker/data-processing-with-logstash-trainning/logstash/files/apache-access-logs:/tmp/apache-access-logs
    #   - /var/docker/data-processing-with-logstash-trainning/logstash/data:/usr/share/logstash/data
    # ports:
    #   - "5044:5044"
    #   - "5000:5000/tcp"
    #   - "5000:5000/udp"
    #   - "8080:8080"
    #   - "9600:9600"
    # environment:
    #   LS_JAVA_OPTS: -Xms256m -Xmx256m
    #   LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD}
    networks:
      - elk
    depends_on:
      - logstash      
      - elasticsearch

networks:
  elk:
    driver: bridge

volumes:
  setup: 
  elasticsearch:

